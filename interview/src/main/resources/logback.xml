<?xml version="1.0" encoding="UTF-8"?>

<!--
scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration debug="false">
	<!-- Log4j: [S][%d{yyyyMMdd HH:mm:ss}][%-5p][%C:%L] - %m%n -->
	<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
	<property name="log.pattern.file" value="%d{yyyy-MM-dd HH:mm:ss.SSS}%-5level ${PID:- } --- [%thread] %logger : %m%n%xException" />
	<property name="log.pattern.error.file" value="%d{yyyy-MM-dd HH:mm:ss.SSS}%-5level ${PID:- } --- [%thread] %logger %method : %m%n%caller{1..3}%xException" />
	<!-- 彩色日志格式 -->
<!--	<property name="log.pattern.console" value="%clr(%d{yyyy-MM-dd HH:mm:ss}) %clr(%-5level) %clr(${PID:- }){magenta} %clr(-&#45;&#45;){faint} %clr([%-10.10thread]){faint} %clr(%-40.40logger{39}){blue} %clr(:){faint} %m%n%xException" />-->
	<property name="log.pattern.console" value="%clr([%-5.7thread]){faint} %clr(%-40.40logger{39}){blue} %clr(:){faint} %m%n%xException" />

	<!-- 控制台输出 -->
	<conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
	<conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
	<conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
	<!-- Console 输出设置 -->
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder charset="${log.charset}">
			<pattern>${log.pattern.console}</pattern>
		</encoder>
	</appender>

	<!-- 日志输出级别 -->
	<!--<root level="TRACE">-->
	<root level="INFO">
		<appender-ref ref="CONSOLE" />
	</root>


</configuration>